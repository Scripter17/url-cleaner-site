[package]
name = "url-cleaner-site"
version = "0.8.0"
edition = "2024"
description = "A basic HTTP server and userscript to make using URL Cleaner in a browser easier."
repository = "https://github.com/Scripter17/url-cleaner-site"
keywords = ["url", "url-tracking", "privacy", "url-cleaner"]
categories = []
license = "AGPL-3.0-or-later"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = "4.5.31"
rocket = { version = "0.5.1", features = ["json", "tls"] }
serde = "1.0.218"
serde_json = "1.0.140"
thiserror = "2.0.12"
tokio = { version = "1.44.0", features = ["macros", "rt"] }
url = { version = "2.5.4", features = ["serde"] }
url-cleaner = { version = "0.8.0", default-features = false }

[features]
default = [
  "default-config",
  "regex",
  "glob",
  "commands",
  "http",
  "base64",
  "cache"
]

# Include default-config.json in the binary.
default-config = ["url-cleaner/default-config"]

# Enables [`url_cleaner::glue::RegexWrapper`].
regex = ["url-cleaner/regex"]

# Enables [`url_cleaner::glue::GlobWrapper`].
glob = ["url-cleaner/glob"]

# Enables HTTP stuff.
http = ["url-cleaner/http"]

# Enables caching various operations.
cache = ["url-cleaner/cache"]

# Enables converting to and from base64.
base64 = ["url-cleaner/base64"]

# Adds `Custom` variants to the main tools which allow using function pointers.
# These cannot be serialized or deserialized and are more powerful than the `commands` feature, so it's also disabled by default.
custom = ["url-cleaner/custom"]

# Enables [`url_cleaner::glue::CommandWrapper`].
commands = ["url-cleaner/commands"]

# Print debug info at various points.
# Wrapping specific items in their own Debug variants gives much more detail, but this can show you where to wrap stuff.
# The exact effects of this feature are currently unspecified, not covered in any stability guarantees, and should not be parsed unless you're willing to rewrite the parser at stupid times for stupider reasons.
debug = ["url-cleaner/debug"]

[lints.rust]
missing_docs = "warn"
missing_debug_implementations = "deny"
unsafe_code = "forbid"
unused_import_braces = "warn"

[lints.clippy]
unwrap_used = "deny"
missing_errors_doc = "deny"
missing_panics_doc = "deny"
missing_safety_doc = "deny"
perf = { level = "warn", priority = -1 }
arithmetic_side_effects = "warn"
cargo_common_metadata = "warn"
todo = "warn"
enum_variant_names = "allow"
missing_docs_in_private_items = "warn"
allow_attributes_without_reason = "warn"
dbg_macro = "warn"
indexing_slicing = "deny"
unit_arg = "allow"
match_like_matches_macro = "allow"
module_inception = "allow"
